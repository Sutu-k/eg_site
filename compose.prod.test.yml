# Configuration pour tester la production en local
services:
  app:
    build:
      context: .
      dockerfile: docker/prod/Dockerfile.prod
    image: ${REGISTRY_NAME:-barakasocial}/app:${IMAGE_TAG:-latest}
    restart: unless-stopped
    environment:
      AUTORUN_ENABLED: "true"
      AUTORUN_LARAVEL_MIGRATION_ISOLATION: "true"
      APP_NAME: "Baraka Social"
      APP_ENV: local # commenter Ã  AppServiceProvider qui force https en production
      APP_KEY: base64:hsV5xHVoFksGb+bmj8mDFEvOElv4+W5JBQH/m4FgPkA=
      APP_DEBUG: false
      APP_TIMEZONE: UTC
      APP_URL: http://localhost
      ASSET_URL: http://localhost
      APP_LOCALE: en
      APP_FALLBACK_LOCALE: en
      APP_FAKER_LOCALE: en_US
      APP_MAINTENANCE_DRIVER: file
      # APP_MAINTENANCE_STORE: database
      PHP_CLI_SERVER_WORKERS: 4
      BCRYPT_ROUNDS: 12
      LOG_CHANNEL: stack
      LOG_STACK: single
      LOG_DEPRECATIONS_CHANNEL: null
      LOG_LEVEL: debug
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: barakasocial
      DB_USERNAME: root
      DB_PASSWORD: root
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120
      SESSION_ENCRYPT: false
      SESSION_PATH: /
      SESSION_DOMAIN: null
      BROADCAST_CONNECTION: log
      FILESYSTEM_DISK: local
      QUEUE_CONNECTION: database
      CACHE_STORE: redis
      CACHE_PREFIX:
      MEMCACHED_HOST: 127.0.0.1
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      MAIL_MAILER: log
      MAIL_SCHEME: null
      MAIL_HOST: 127.0.0.1
      MAIL_PORT: 2525
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_FROM_ADDRESS: "hello@barakasocial.com"
      MAIL_FROM_NAME: "${APP_NAME}"
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET:
      AWS_USE_PATH_STYLE_ENDPOINT: false
      VITE_APP_NAME: ${APP_NAME}
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./appli/storage:/var/www/html/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: barakasocial
      MYSQL_USER: barakasocial
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
